version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 869935099884.dkr.ecr.us-east-1.amazonaws.com
      - echo Logging in to Docker Hub...
      - docker login --username dave1395 --password dckr_pat_9kRVamWoqxlAJ5t0Dsje6lUUCk0
  build:
    commands:
      - echo Building Docker images for frontend and backend...
      - cd fullstack-app-be
      - docker build -t weatherapp-ecr-be .
      - docker tag weatherapp-ecr-be:latest 869935099884.dkr.ecr.us-east-1.amazonaws.com/weatherapp-ecr-be:latest
      - docker push 869935099884.dkr.ecr.us-east-1.amazonaws.com/weatherapp-ecr-be:latest
      - cd ../fullstack-app-fe
      - echo Fetching backend IP dynamically...
      - BACKEND_IP=$(aws ecs describe-tasks --cluster weather-app-new-cluster --tasks $(aws ecs list-tasks --cluster weather-app-new-cluster --service-name weatherapp-be-service --query 'taskArns[0]' --output text) --query 'tasks[0].attachments[0].details[?name==`publicIPv4Address`].value' --output text)
      - echo "REACT_APP_BACKEND_URL=http://$BACKEND_IP:5000/api" > .env
      - npm install
      - npm run build
      - docker build -t weatherapp-ecr-fe .
      - docker tag weatherapp-ecr-fe:latest 869935099884.dkr.ecr.us-east-1.amazonaws.com/weatherapp-ecr-fe:latest
      - docker push 869935099884.dkr.ecr.us-east-1.amazonaws.com/weatherapp-ecr-fe:latest
  post_build:
    commands:
      - echo Updating ECS services to use the latest images...
      - aws ecs update-service --cluster weather-app-new-cluster --service weatherapp-be-service --force-new-deployment
      - aws ecs update-service --cluster weather-app-new-cluster --service weatherapp-fe-service --force-new-deployment

artifacts:
  files:
    - '**/*'